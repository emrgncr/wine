--- dlls/ntdll/string.c
+++ dlls/ntdll/string.c
@@ -141,13 +142,78 @@ void * __cdecl memmove( void *dst, const void *src, size_t n )
 }
 
 
+static FORCEINLINE void memset_c_unaligned_32( char *d, uint64_t v, size_t n )
+{
+    if (n >= 24)
+    {
+        *(uint64_t *)d = v;
+        *(uint64_t *)(d + 8) = v;
+        *(uint64_t *)(d + 16) = v;
+        *(uint64_t *)(d + n - 8) = v;
+    }
+    else if (n >= 16)
+    {
+        *(uint64_t *)d = v;
+        *(uint64_t *)(d + 8) = v;
+        *(uint64_t *)(d + n - 8) = v;
+    }
+    else if (n >= 8)
+    {
+        *(uint64_t *)d = v;
+        *(uint64_t *)(d + n - 8) = v;
+    }
+    else if (n >= 4)
+    {
+        *(uint32_t *)d = v;
+        *(uint32_t *)(d + n - 4) = v;
+    }
+    else if (n >= 2)
+    {
+        *(uint16_t *)d = v;
+        *(uint16_t *)(d + n - 2) = v;
+    }
+    else if (n >= 1)
+    {
+        *(uint8_t *)d = v;
+    }
+}
+
+
 /*********************************************************************
  *                  memset   (NTDLL.@)
  */
-void * __cdecl memset( void *dst, int c, size_t n )
+void *__cdecl memset(void *dst, int c, size_t n)
 {
-    volatile unsigned char *d = dst;  /* avoid gcc optimizations */
-    while (n--) *d++ = c;
+    uint16_t tmp16 = ((uint16_t)c << 8) | c;
+    uint32_t tmp32 = ((uint32_t)tmp16 << 16) | tmp16;
+    uint64_t v = ((uint64_t)tmp32 << 32) | tmp32;
+
+    if (n <= 32)
+    {
+        memset_c_unaligned_32( dst, v, n );
+        return dst;
+    }
+
+    while (n >= 48)
+    {
+        *(uint64_t*)((char *)dst + n -  8) = v;
+        *(uint64_t*)((char *)dst + n - 16) = v;
+        *(uint64_t*)((char *)dst + n - 24) = v;
+        *(uint64_t*)((char *)dst + n - 32) = v;
+        *(uint64_t*)((char *)dst + n - 40) = v;
+        *(uint64_t*)((char *)dst + n - 48) = v;
+        n -= 48;
+    }
+
+    while (n >= 24)
+    {
+        *(uint64_t*)((char *)dst + n -  8) = v;
+        *(uint64_t*)((char *)dst + n - 16) = v;
+        *(uint64_t*)((char *)dst + n - 24) = v;
+        n -= 24;
+    }
+
+    memset_c_unaligned_32( dst, v, n );
     return dst;
 }
 
--- dlls/ntdll/string.c
+++ dlls/ntdll/string.c
@@ -226,20 +350,7 @@ int __cdecl memcmp( const void *ptr1, const void *ptr2, size_t n )
  */
 void * __cdecl memcpy( void *dst, const void *src, size_t n )
 {
-    volatile unsigned char *d = dst;  /* avoid gcc optimizations */
-    const unsigned char *s = src;
-
-    if ((size_t)dst - (size_t)src >= n)
-    {
-        while (n--) *d++ = *s++;
-    }
-    else
-    {
-        d += n - 1;
-        s += n - 1;
-        while (n--) *d-- = *s--;
-    }
-    return dst;
+    return memmove_c( dst, src, n );
 }
 
 
@@ -248,20 +359,7 @@ void * __cdecl memcpy( void *dst, const void *src, size_t n )
  */
 void * __cdecl memmove( void *dst, const void *src, size_t n )
 {
-    volatile unsigned char *d = dst;  /* avoid gcc optimizations */
-    const unsigned char *s = src;
-
-    if ((size_t)dst - (size_t)src >= n)
-    {
-        while (n--) *d++ = *s++;
-    }
-    else
-    {
-        d += n - 1;
-        s += n - 1;
-        while (n--) *d-- = *s--;
-    }
-    return dst;
+    return memmove_c( dst, src, n );
 }
 
 
